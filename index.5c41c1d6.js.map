{"mappings":"YAAA,IAAMA,EAAW,+BCEjB,IAAMC,EAAaC,SAASC,cAAc,iBACpCC,EAAUF,SAASC,cAAc,aACvCF,EAAWI,iBAAiB,UAM5B,SAAkBC,IDSOC,ECRPD,EAAIE,OAAOC,MDUbC,MAAM,GAAsBC,OAAnBX,EAAS,YAAkBW,OAARJ,EAAQ,mHAG9CK,MAAK,SAAAC,GACP,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,KCfXL,MAAK,SAAAM,G,OAaV,SAAqBC,GAGnBf,EAAQgB,UAAY,GACpB,IAAQC,EAAgBF,EAAhBE,IACFC,EADkBH,EAAXI,OAEVC,KAAI,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaC,EAAWH,EAAXG,YACzB,MAAO,aACEjB,OADWe,EAAK,wBAEhBf,OADAgB,EAAY,uBAINhB,OAHNiB,EAAY,iDAGKjB,OAAXU,EAAI,SAAYV,OAALe,EAAK,M,IAEhCG,KAAK,IAERzB,EAAQ0B,mBAAmB,YAAaR,E,CA7BtBS,CAAYb,E,IAC3Bc,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IDI9B,IAAyB1B,C,IAZhBG,MAAM,GAAYC,OAATX,EAAS,2HAGrBY,MAAK,SAAAC,GACP,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,ICRbL,MAAK,SAAAwB,G,OAYAC,EAZoBD,EAavBZ,KAAI,SAAAC,G,IAAGa,EAAkBb,EAAlBa,mBAAoBZ,EAAID,EAAJC,KAC1B,MAAO,mBAA0Cf,OAAvB2B,EAAmB,MAAS3B,OAALe,EAAK,Y,IAEvDG,KAAK,SACR5B,EAAW6B,mBAAmB,YAAaO,GAN7C,IACQA,C,IAXLL,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1';\nconst headers = {\n  'x-api-key':\n    'live_FOG7aRLYWG9g0M7LDbCu7dQ7ewu5mSLwwAFxQjU5uUVgVOeYBl8W7znUpztVyjx8',\n};\n\nfunction fetchBreeds() {\n  return fetch(`${BASE_URL}/breeds? {\n  headers: {\n    x-api-key: 'live_FOG7aRLYWG9g0M7LDbCu7dQ7ewu5mSLwwAFxQjU5uUVgVOeYBl8W7znUpztVyjx8',\n  }`).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n}\n\nfunction fetchCatByBreed(breedId) {\n  //api.thecatapi.com/v1/images/xnsqonbjW?api-key=live_FOG7aRLYWG9g0M7LDbCu7dQ7ewu5mSLwwAFxQjU5uUVgVOeYBl8W7znUpztVyjx8\n  https: return fetch(`${BASE_URL}/images/${breedId}?{\n  headers: {\n    x-api-key: 'live_FOG7aRLYWG9g0M7LDbCu7dQ7ewu5mSLwwAFxQjU5uUVgVOeYBl8W7znUpztVyjx8',\n  }`).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n}\n\nexport { fetchBreeds, fetchCatByBreed };\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst breedsList = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nbreedsList.addEventListener('change', onChange);\n\nfetchBreeds()\n  .then(data => creatSelect(data))\n  .catch(err => console.log(err));\n\nfunction onChange(evt) {\n  const breedID = evt.target.value;\n\n  fetchCatByBreed(breedID)\n    .then(catArr => creatMarkup(catArr))\n    .catch(err => console.log(err));\n}\n\nfunction creatSelect(arr) {\n  const markup = arr\n    .map(({ reference_image_id, name }) => {\n      return `<option value = ${reference_image_id}> ${name}</option>`;\n    })\n    .join('');\n  breedsList.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction creatMarkup(catObj) {\n  // catObj виявився обєктом, як не дивно, breeds виявився масивом.\n  //Я робила map  on obj, а цей метод для масивів! того я дістала свій масив і його мепнула\n  catInfo.innerHTML = '';\n  const { url, breeds } = catObj;\n  const catMarkup = breeds\n    .map(({ name, description, temperament }) => {\n      return ` <div><h2>${name}</h2>\n          <p>${description}</p>\n          <p>${temperament}</p>\n          </div>\n\n          <img src=${url} alt=${name} />`;\n    })\n    .join('');\n\n  catInfo.insertAdjacentHTML('beforeend', catMarkup);\n}\n"],"names":["$ae0c329fb0fb36dc$var$BASE_URL","$b8f9b7833fa37166$var$breedsList","document","querySelector","$b8f9b7833fa37166$var$catInfo","addEventListener","evt","breedId","target","value","fetch","concat","then","resp","ok","Error","statusText","json","catArr","catObj","innerHTML","url","catMarkup","breeds","map","param","name","description","temperament","join","insertAdjacentHTML","$b8f9b7833fa37166$var$creatMarkup","catch","err","console","log","data","markup","reference_image_id"],"version":3,"file":"index.5c41c1d6.js.map"}